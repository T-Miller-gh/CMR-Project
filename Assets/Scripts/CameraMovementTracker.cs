using UnityEngine;
using System;

// Idea to use camera movement for headset detection made by developer. 
// Script generated by ChatGPT - minor adjustments included. Did this due to not having enough time to develop. 

public class CameraMovementTracker : MonoBehaviour
{
    public float inactivityThreshold = 10f; // Time in seconds before considered "inactive"

    private Transform camTransform;
    private Vector3 lastPosition;
    private float timeSinceLastMove;

    public static Action pauseGameForInactivity; 

    void Start()
    {
        camTransform = Camera.main.transform; // Get the main camera's transform
        lastPosition = camTransform.position;
        timeSinceLastMove = 0f;
    }

    void Update()
    {
        // Calculate distance moved since last frame
        float distanceMoved = Vector3.Distance(camTransform.position, lastPosition);

        if (distanceMoved > 0.0001f) // Small threshold to ignore micro-movements
        {
            timeSinceLastMove = 0f; // Reset inactivity timer
        }
        else
        {
            timeSinceLastMove += Time.deltaTime; // Count inactive time
        }

        // Check if inactivity exceeds the threshold
        if (timeSinceLastMove >= inactivityThreshold)
        {
            // Debug.Log("Camera has been still for " + inactivityThreshold + " seconds.");
            pauseGameForInactivity?.Invoke(); 
        }

        // Update last position
        lastPosition = camTransform.position;
    }
}
